{"version":3,"sources":["components/LinkedListLogic.js","assets/NaventLogo.svg","components/Styled.jsx","components/LinkedListComponent.jsx","components/LinkedListSort.jsx","App.js","index.js"],"names":["Node","data","next","this","LinkedList","head","newNode","current","mergeTwoLists","l1","l2","finalList","currentl1","currentl2","addTail","linkedList","list1","list2","Container","styled","div","NaventHeader","header","TransparentCard","StyledSVG","SVG","StyledInput","input","StyledButton","button","Warning","p","NaventFooter","footer","LinkedListComponent","useState","listItem","setListItem","list","setList","change","setChange","alter","setAlter","random","setRandom","inputNotif","setInputNotif","console","log","handleTail","n","parseInt","convertToArray","handleHead","addHead","number","arr","unshift","push","src","Logo","className","JSON","stringify","type","name","onChange","e","target","value","onClick","length","count","Math","floor","memo","LinkedListSort","listA","setListA","listB","setListB","showGen","setShowGen","showMerged","setShowMerged","hideButton","setHideButton","mergedList","setMergedList","handleList1","handleList2","handleMerge","left","right","shift","array","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b657f59.chunk.js","sourcesContent":["export class Node {\r\n    constructor(data,next){\r\n      this.data = data;\r\n      this.next = next;\r\n    }\r\n\r\n  }\r\n  \r\nexport class LinkedList {\r\n    constructor() {\r\n      this.head = null;\r\n    }\r\n  \r\n    addTail(data) {\r\n      const newNode = new Node(data, null);\r\n      if(!this.head){\r\n        this.head = newNode\r\n      } else {\r\n        let current = this.head;\r\n        while (current.next){\r\n          current = current.next;\r\n        };\r\n        current.next = newNode;\r\n      };\r\n    }\r\n    addHead(head,data) {\r\n      let newNode = new Node(data,null)\r\n      if(!this.head) {\r\n          this.head= newNode\r\n          return head\r\n      } else {\r\n          newNode.next = this.head\r\n          this.head =newNode\r\n      }\r\n      return this.head\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport const mergeTwoLists = (l1, l2) => {\r\n  if (!l1) return l2;\r\n  if (!l2) return l1;\r\n let finalList= new LinkedList();\r\n let currentl1 = l1.head;\r\n let currentl2 = l2.head;\r\n\r\nwhile(currentl1  !== null || currentl2 !== null) {\r\n  if(currentl1.data <= currentl2.data) {\r\n    finalList.addTail(currentl1.data)\r\n    if(!currentl1.next){\r\n      finalList.addTail(currentl2.data)\r\n      return finalList\r\n    }\r\n    currentl1 = currentl1.next;\r\n \r\n  } else if(currentl2.data <= currentl1.data){\r\n   finalList.addTail(currentl2.data)\r\n   if(!currentl2.next){\r\n    finalList.addTail(currentl1.data)\r\n\r\n    return finalList\r\n  }\r\n   currentl2 = currentl2.next;\r\n  }\r\n\r\n}\r\n\r\nreturn finalList;\r\n};\r\n\r\nexport let linkedList = new LinkedList();\r\nexport let list1 = new LinkedList();\r\nexport let list2= new LinkedList();\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/NaventLogo.8435c853.svg\";","import styled from \"styled-components\";\r\nimport SVG from \"react-inlinesvg\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const NaventHeader = styled.header`\r\n  background: #fafafa;\r\n  color: #582568;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  height: 100px;\r\n  box-shadow: 0 9px 20px rgb(0 0 0 / 6%), 0 2px 3px rgb(0 0 0 / 4%);\r\n  margin-bottom: 2em;\r\n\r\n  h4 {\r\n    flex: 1;\r\n    color: #9595a0;\r\n  }\r\n\r\n  @media (max-width: 750px) {\r\n    font-size: 18px;\r\n    h4 {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TransparentCard = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  background: #fafafa;\r\n\r\n  .problemContainer {\r\n    margin-bottom: 2em;\r\n\r\n    p {\r\n      font-size: 16px;\r\n    }\r\n\r\n    .showList {\r\n      text-align: center;\r\n      font-size: 24px;\r\n    }\r\n    .codeContainer {\r\n      border-radius: 0.25rem;\r\n      text-align: left;\r\n      margin: 1em 0;\r\n      padding: 10px 20px;\r\n      font-size: 16px;\r\n      background-color: #582568;\r\n      color: #fafafa;\r\n\r\n      h5 {\r\n        margin: 1em 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledSVG = styled(SVG)`\r\n  height: 120px;\r\n  flex: 1;\r\n  @media (max-width: 750px) {\r\n    height: 80px;\r\n  }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  border: 1px solid #7c7c84;\r\n  border-radius: 0.25rem;\r\n  height: 30px;\r\n  margin: 10px;\r\n\r\n  &:focus {\r\n    border: 2px solid #582568;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  border: 1px solid #582568;\r\n  background-color: transparent;\r\n  color: #582568;\r\n  font-weight: bold;\r\n  border-radius: 0.25rem;\r\n  padding: 0.3em 0.5em;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  margin: 1em 10px;\r\n  transition: background-color color 0.5s ease-in-out;\r\n  &:hover {\r\n    background-color: #582568;\r\n    color: #fafafa;\r\n  }\r\n  &:focus {\r\n    border: 2px solid #582568;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const Warning = styled.p`\r\n  color: #582568;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const NaventFooter = styled.footer`\r\n  background: rgba(88, 37, 104, 0.712);\r\n  color: #fafafa;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  height: 100px;\r\n  margin-top: 2em;\r\n\r\n  a {\r\n    color: #fafafa;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      color: #582568;\r\n      text-decoration: underline;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 750px) {\r\n    font-size: 18px;\r\n    h4 {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, memo } from \"react\";\r\n\r\n//Components ==>\r\nimport { linkedList } from \"./LinkedListLogic\";\r\n\r\n//Styles ==>\r\nimport Logo from \"../assets/NaventLogo.svg\";\r\nimport {\r\n  Container,\r\n  NaventHeader,\r\n  StyledSVG,\r\n  TransparentCard,\r\n  StyledInput,\r\n  StyledButton,\r\n  Warning,\r\n} from \"./Styled\";\r\n\r\nconst LinkedListComponent = () => {\r\n  const [listItem, setListItem] = useState();\r\n  const [list, setList] = useState([]);\r\n  const [change, setChange] = useState(false);\r\n  const [alter, setAlter] = useState(false);\r\n  const [random, setRandom] = useState(false);\r\n  const [inputNotif, setInputNotif] = useState(false);\r\n\r\n  let problemA = `Dado una lista encadenada, y 5 valores para insertar, insertar dichos\r\n  valores alternadamente al final y al principio de la lista. Ejemplo:\r\n  Lista inicial: 1 -> 4 -> 5 -> 3 Lista luego de la inserción secuencial\r\n  de los valores: 6, 7, 8, 9, 10 9 -> 7 -> 1 -> 4 -> 5 -> 3 -> 6 -> 8 ->\r\n  10`;\r\n\r\n  console.log(`listItem`, listItem);\r\n  const handleRandom = () => {\r\n    let count = 0;\r\n    while (count < 4) {\r\n      handleTail(Math.floor(Math.random() * 10 + 1));\r\n      count++;\r\n    }\r\n    setRandom(true);\r\n  };\r\n\r\n  const handleEjemplo = () => {\r\n    handleTail(1);\r\n    handleTail(4);\r\n    handleTail(5);\r\n    handleTail(3);\r\n    setRandom(true);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setListItem(e.target.value);\r\n  };\r\n\r\n  const handleButton = () => {\r\n    setInputNotif(false);\r\n    !alter ? handleTail() : handleHead();\r\n    setAlter(!alter);\r\n  };\r\n\r\n  const handleTail = (n) => {\r\n    if (!n) {\r\n      linkedList.addTail(parseInt(listItem, 10));\r\n      setChange(false);\r\n      setList([...list, parseInt(convertToArray(listItem))]);\r\n    } else {\r\n      linkedList.addTail(parseInt(n, 10));\r\n      setChange(false);\r\n      setList((list) => [...list, n]);\r\n    }\r\n  };\r\n\r\n  const handleHead = () => {\r\n    linkedList.addHead(linkedList.head, parseInt(listItem, 10));\r\n    setChange(true);\r\n    setList([parseInt(convertToArray(listItem)), ...list]);\r\n  };\r\n\r\n  const convertToArray = (number) => {\r\n    let arr = [];\r\n    if (!change) {\r\n      arr.push(number);\r\n    } else if (change) {\r\n      arr.unshift(number);\r\n      return arr[0];\r\n    }\r\n    return arr[0];\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <NaventHeader>\r\n        <StyledSVG src={Logo} />\r\n        <h2>Navent Challenge</h2>\r\n        <h4>\r\n          <small>by. </small>Franco Ortiz\r\n        </h4>\r\n      </NaventHeader>\r\n      <TransparentCard>\r\n        <div className=\"problemContainer\">\r\n          <h4>Problema A:</h4>\r\n          <p>{problemA}</p>\r\n        </div>\r\n        <div className=\"problemContainer\">\r\n          <h4>Solución:</h4>\r\n          {random ? (\r\n            <>\r\n              <p className=\"showList\">{JSON.stringify(list)}</p>\r\n              <div className=\"codeContainer\">\r\n                <h5>Código de la LinkedList</h5>\r\n                <p>{JSON.stringify(linkedList)}</p>\r\n              </div>\r\n\r\n              <p>\r\n                Ingresa numeros para ir agregando a la lista de forma\r\n                secuencial.\r\n              </p>\r\n              <StyledInput\r\n                type=\"number\"\r\n                name=\"createList\"\r\n                onChange={handleInputChange}\r\n              />\r\n              <StyledButton\r\n                onClick={\r\n                  listItem && !!listItem.length\r\n                    ? handleButton\r\n                    : () => setInputNotif(true)\r\n                }\r\n              >\r\n                Agregar\r\n              </StyledButton>\r\n              {inputNotif && <Warning>Introduce un numero por favor</Warning>}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>\r\n                Toca el Botón para generar una lista aleatoria o para generar la\r\n                lista del ejemplo del ejercicio.\r\n              </p>\r\n              <StyledButton onClick={handleRandom}>Generar Lista</StyledButton>\r\n              <StyledButton onClick={handleEjemplo}>Ejemplo</StyledButton>\r\n            </>\r\n          )}\r\n        </div>\r\n      </TransparentCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default memo(LinkedListComponent);\r\n","import React, { useState, memo } from \"react\";\r\n\r\n//Components ==>\r\nimport { list1, list2, mergeTwoLists } from \"./LinkedListLogic\";\r\n\r\n//Styles ==>\r\nimport { TransparentCard, StyledButton, NaventFooter } from \"./Styled\";\r\n\r\nconst LinkedListSort = () => {\r\n  const [listA, setListA] = useState([]);\r\n  const [listB, setListB] = useState([]);\r\n  const [showGen, setShowGen] = useState(false);\r\n  const [showMerged, setShowMerged] = useState(false);\r\n  const [hideButton, setHideButton] = useState(false);\r\n\r\n  const [mergedList, setMergedList] = useState([]);\r\n\r\n  const problemB = `Dadas 2 listas ordenadas, obtener una 3era ordenada:\r\n  Ejemplo:\r\n  Listas iniciales:\r\n  1 -> 3 -> 5 -> 8\r\n  2 -> 3-> 6 -> 9\r\n  Lista final luego de unirlas ordenadamente:\r\n  1 -> 2 -> 3 -> 3 -> 5 -> 6 -> 8 -> 9`;\r\n\r\n  const handleEjemplo = () => {\r\n    handleList1(1);\r\n    handleList1(3);\r\n    handleList1(5);\r\n    handleList1(8);\r\n\r\n    handleList2(2);\r\n    handleList2(3);\r\n    handleList2(6);\r\n    handleList2(9);\r\n    setShowGen(true);\r\n  };\r\n\r\n  const handleMergeButton = () => {\r\n    let array = handleMerge(listA, listB);\r\n    setMergedList((mergedList) => array);\r\n    setShowMerged(true);\r\n    setHideButton(true);\r\n  };\r\n\r\n  const handleList1 = (n) => {\r\n    list1.addTail(parseInt(n));\r\n    setListA((list) => [...list, n]);\r\n  };\r\n  const handleList2 = (n) => {\r\n    list2.addTail(parseInt(n));\r\n    setListB((list) => [...list, n]);\r\n  };\r\n\r\n  const handleMerge = (listA, listB) => {\r\n    let left = listA;\r\n    let right = listB;\r\n    let arr = [];\r\n    while (left.length && right.length) {\r\n      if (left[0] < right[0]) {\r\n        arr.push(left.shift());\r\n      } else {\r\n        arr.push(right.shift());\r\n      }\r\n    }\r\n    return [...arr, ...left, ...right];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TransparentCard>\r\n        <div className=\"problemContainer\">\r\n          <h4>Problema B:</h4>\r\n          <p>{problemB}</p>\r\n        </div>\r\n        <div className=\"problemContainer\">\r\n          <h4>Solución:</h4>\r\n          {!showGen && (\r\n            <p>\r\n              Toca el Botón para generar la lista del ejemplo del ejercicio.\r\n            </p>\r\n          )}\r\n          {!showMerged ? (\r\n            <>\r\n              {showGen && (\r\n                <>\r\n                  <p className=\"showList\">{JSON.stringify(listA)}</p>\r\n                  <p className=\"showList\">{JSON.stringify(listB)}</p>\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <p className=\"showList\">{JSON.stringify(mergedList)}</p>\r\n          )}\r\n\r\n          {!showGen ? (\r\n            <StyledButton onClick={handleEjemplo}>\r\n              Generar lista de Ejemplo\r\n            </StyledButton>\r\n          ) : (\r\n            <>\r\n              {!hideButton && (\r\n                <StyledButton onClick={handleMergeButton}>\r\n                  Unir Listas\r\n                </StyledButton>\r\n              )}\r\n            </>\r\n          )}\r\n          <div className=\"codeContainer\">\r\n            <h5>Lista1:</h5>\r\n            <p>{JSON.stringify(list1)}</p>\r\n            <h5>Lista2:</h5>\r\n            <p>{JSON.stringify(list2)}</p>\r\n\r\n            <h5>\r\n              <h5>Resultado:</h5>\r\n\r\n              <p>{JSON.stringify(mergeTwoLists(list1, list2))}</p>\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </TransparentCard>\r\n      <NaventFooter>\r\n        <p>\r\n          Contacto:{\" \"}\r\n          <a\r\n            href={\"mailto:ortiz.franco@yandex.com?Subject=Entrevista%20Navent\"}\r\n          >\r\n            ortiz.franco@yandex.com\r\n          </a>\r\n        </p>\r\n      </NaventFooter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(LinkedListSort);\r\n","import './App.css';\nimport LinkedListComponent from './components/LinkedListComponent'\nimport LinkedListSort from './components/LinkedListSort'\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n     <LinkedListComponent/>\n     <LinkedListSort />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}